var cov_1f0q01nm0q=function(){var path="E:\\Questionner\\server\\app.js",hash="98e37541c258cf6d4ea5cac9f7dcd1b82c53699c",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"E:\\Questionner\\server\\app.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:34}},"1":{start:{line:2,column:15},end:{line:2,column:32}},"2":{start:{line:3,column:19},end:{line:3,column:41}},"3":{start:{line:4,column:19},end:{line:4,column:49}},"4":{start:{line:5,column:21},end:{line:5,column:53}},"5":{start:{line:6,column:23},end:{line:6,column:57}},"6":{start:{line:7,column:19},end:{line:7,column:49}},"7":{start:{line:9,column:13},end:{line:9,column:51}},"8":{start:{line:10,column:12},end:{line:10,column:21}},"9":{start:{line:13,column:0},end:{line:13,column:23}},"10":{start:{line:14,column:0},end:{line:14,column:52}},"11":{start:{line:15,column:0},end:{line:15,column:27}},"12":{start:{line:16,column:0},end:{line:16,column:20}},"13":{start:{line:17,column:0},end:{line:17,column:22}},"14":{start:{line:18,column:0},end:{line:18,column:24}},"15":{start:{line:19,column:0},end:{line:19,column:20}},"16":{start:{line:25,column:0},end:{line:27,column:3}},"17":{start:{line:26,column:4},end:{line:26,column:50}},"18":{start:{line:29,column:0},end:{line:29,column:21}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:25,column:17},end:{line:25,column:18}},loc:{start:{line:25,column:23},end:{line:27,column:1}},line:25}},branchMap:{"0":{loc:{start:{line:9,column:13},end:{line:9,column:51}},type:"binary-expr",locations:[{start:{line:9,column:13},end:{line:9,column:43}},{start:{line:9,column:47},end:{line:9,column:51}}],line:9}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const express=(cov_1f0q01nm0q.s[0]++,require('express'));const morgan=(cov_1f0q01nm0q.s[1]++,require('morgan'));const bodyParser=(cov_1f0q01nm0q.s[2]++,require('body-parser'));const userRoutes=(cov_1f0q01nm0q.s[3]++,require('./routes/userRoutes'));const meetupRoutes=(cov_1f0q01nm0q.s[4]++,require('./routes/meetupRoutes'));const questionRoutes=(cov_1f0q01nm0q.s[5]++,require('./routes/questionRoutes'));const rsvpRoutes=(cov_1f0q01nm0q.s[6]++,require('./routes/rsvpRoutes'));const port=(cov_1f0q01nm0q.s[7]++,(cov_1f0q01nm0q.b[0][0]++,parseInt(process.env.PORT,10))||(cov_1f0q01nm0q.b[0][1]++,4000));const app=(cov_1f0q01nm0q.s[8]++,express());// routes  to handle requests
cov_1f0q01nm0q.s[9]++;app.use(morgan('dev'));cov_1f0q01nm0q.s[10]++;app.use(bodyParser.urlencoded({extended:false}));cov_1f0q01nm0q.s[11]++;app.use(bodyParser.json());cov_1f0q01nm0q.s[12]++;app.use(userRoutes);cov_1f0q01nm0q.s[13]++;app.use(meetupRoutes);cov_1f0q01nm0q.s[14]++;app.use(questionRoutes);cov_1f0q01nm0q.s[15]++;app.use(rsvpRoutes);/* app.get('/*', (req, res) => res.status(200).send({
        message: 'Welcome to Heroku',
    }),); */cov_1f0q01nm0q.s[16]++;app.listen(port,()=>{cov_1f0q01nm0q.f[0]++;cov_1f0q01nm0q.s[17]++;console.log('app is listening on port',port);});cov_1f0q01nm0q.s[18]++;module.exports=app;